# W101-JupyterandPython

print()

import modulename
  modules can be used by typing modulename.functionname() (you have to know the name of the function, e.g. "math.sqrt" in the "math" module)

x = (defines variable 'x')

data types
  int: whole integer values (e.g. 4)
  float: decimal values (e.g. 3.1415)
  str: character strings (e.g. the word 'character)
  bool: boolean (true/false) values (e.g. "True)

type() tells you what type of data a datum or variable is
  datatype(variable) to convert to a different type of data (e.g. zipcode = str(zipcode) to make zip code a string variable)

lists are denoted by square brackets; they have an order
  list = [1, 2, 3, 4]
  add new element to list with append() -> list.append('hello')
  del list[location] will delete a value from a list at the specified location
  list.count(value) counts the number of occurrences of an item in a list
  list.index(value) finds the index value (position) of an item in a list
  list.sort() sorts the list alphabetically

dictionary has key:value pairs, denoted by curly brackets
  my_name = {'first name':'Matt', 'last name':'Phillips'}. for clarity, this can also be written as:
    my_name = {
      'first name':'Matt',
      'last name':'Phillips',
      'school':'UCLA Urban Planning'
    }
 
len() tells you how many characters are in a string
 
variable[number] tells you the position of a character in a string variable
  variable.replace('e', 'E') replaces all little es with big Es

for general data wrangling tasks: import pandas as pd

to read and visualize spatial data: import geopandas as gpd

to provide basemaps: import contextily as ctx

to give more power to your figures (plots): import matplotlib.pyplot as plt

df.plot() = plot your data

I want to see all the data
  pd.set_option('display.max_columns', None)
  pd.set_option('display.max_rows', None)

to see info from one column: df.columnname.head()

drop the row with index 0 (i.e. the first row): df = df.drop([0])

designate certain columns to keep (and discard others)
  columns_to_keep = ['','']
  then must redefine dataframe df = df[columns_to_keep]
  
list columns: list(gdf) OR df.columns.to_list()

rename columns: gdf.columns = ['',''}

access a single column: df['columnname'] OR df['columnname'].head()

get stats for a column: df['columnname'].describe()

plot one column using a historgram with 50 bins: df['columname'].plot.hist(bins=50)

sort by column: df_sorted = df.sort_values(by='columname',ascending = False)
  'ascending = False' means sorting it by descending values
  
subset the data so that we can see the data per row... in other words, this syntax is asking to "show me the values in my dataframe that match this filter
  gdf[gdf['Total']==0]
  
 
